(dp1
S'output'
p2
S"<type 'exceptions.AttributeError'> 'NoneType' object has no attribute '_adapter'"
p3
sS'layer'
p4
S'/home/amauri/web2py/applications/ref_table/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\n\n# gato    =   db.gatos.insert(nome=\xe2\x80\x9dSr.   Pelinhos\xe2\x80\x9d,  raca=\xe2\x80\x9dSphynx\xe2\x80\x9d)\n# rows = db(query).select()\n# >>> rows_list = rows.as_list()\ndef index():\n    # siglas = db(SC).select()\n    # lista = [sig.sigla for sig in siglas]\n    # lista = [sig.sigla for sig in db(SC).select()]\n    # form = SQLFORM.factory(\n    #     Field(\'sig\', requires = IS_IN_DB(db, \'sigla_cidade.id\', \'%(sigla)s\')),\n    #     # Field(\'sig\', requires = IS_IN_SET([sig.sigla for sig in db(SC).select(SC.sigla)])),\n    #     Field(\'nom\', requires = IS_IN_DB(db, \'nome_cidade.id\', \'%(nome)s\')))\n    form = SQLFORM(SCNC)\n    \n    form2 = SQLFORM(SCNC, Field(\'campo\', requires=IS_IN_SET(NC.fields)))\n    print form2\n    if form.process().accepted:\n        response.flash = \'Salvo\'\n        print \'request.vars.sig\', request.vars.sigla_cid, form.vars.nome_cid\n        # SCNC.insert(nome_cid=request.vars.sig, sigla_cid=request.vars.nom)\n    else:\n        response.flash = \'ERRO\'\n    return dict(form=form, form2=form2)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n\nresponse._vars=response._caller(index)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/amauri/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/amauri/web2py/applications/ref_table/controllers/default.py", line 74, in <module>\n  File "/home/amauri/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/amauri/web2py/applications/ref_table/controllers/default.py", line 24, in index\n    form2 = SQLFORM(SCNC, Field(\'campo\', requires=IS_IN_SET(NC.fields)))\n  File "/home/amauri/web2py/gluon/sqlhtml.py", line 1232, in __init__\n    if showid and field.name in record and field.readable:\n  File "/home/amauri/web2py/gluon/packages/dal/pydal/objects.py", line 1123, in __getitem__\n    return self[i:i + 1]\n  File "/home/amauri/web2py/gluon/packages/dal/pydal/objects.py", line 1120, in __getitem__\n    return Expression(db, db._adapter.SUBSTRING,\nAttributeError: \'NoneType\' object has no attribute \'_adapter\'\n'
p11
s.